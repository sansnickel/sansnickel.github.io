{"version":3,"sources":["Components/Portfolio.js","Components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["Portfolio","Timeline","set","transform","settings","dots","infinite","slidesToShow","slidesToScroll","centerMode","centerPadding","arrows","className","muted","poster","onMouseEnter","e","target","play","onMouseLeave","pause","src","React","Component","Resume","gsap","registerPlugin","App","props","state","page","to","opacity","newpage","this","setState","onClick","changePage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e4e205e9.chunk.js","sourcesContent":["import Slider from \"react-slick\"\r\nimport React from \"react\";\r\nimport { Timeline } from 'gsap/gsap-core';\r\n\r\n\r\nclass Portfolio extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let tl = new Timeline();\r\n        tl.set('.slick-list', {transform: 'translate(0%)'});\r\n    }\r\n\r\n    render() {\r\n\r\n        let settings = {\r\n            dots: true,\r\n            infinite: false,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            centerMode: true,\r\n            centerPadding: '20%',\r\n            arrows: false,\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"portfolio\">\r\n\r\n                <div className=\"portfolio__slider\">\r\n\r\n                <Slider {...settings}>\r\n                    <div className=\"portfolio__slider__vid\">\r\n                        <video muted poster=\"/img/creative.png\" onMouseEnter={e => e.target.play()} onMouseLeave={e => e.target.pause()}>\r\n                            <source src=\"/vid/CreativeEnergy1.mp4\"></source>\r\n                        </video>\r\n                    </div>\r\n                    <div className=\"portfolio__slider__vid\">\r\n                        <video muted poster=\"/img/lighthouse.png\" onMouseEnter={e => e.target.play()} onMouseLeave={e => e.target.pause()}>\r\n                            <source src=\"/vid/Lighthouse.mp4\"></source>\r\n                        </video>                  \r\n                    </div>\r\n                    <div className=\"portfolio__slider__vid\">\r\n                        <video muted poster=\"/img/senakw.png\" onMouseEnter={e => e.target.play()} onMouseLeave={e => e.target.pause()}>\r\n                            <source src=\"/vid/Senakw.mp4\"></source>\r\n                        </video>\r\n                    </div>\r\n                    <div className=\"portfolio__slider__vid\">\r\n                        <video muted poster=\"/img/riverside.png\" onMouseEnter={e => e.target.play()} onMouseLeave={e => e.target.pause()}>\r\n                            <source src=\"/vid/Riverside1.mp4\"></source>\r\n                        </video>\r\n                    </div>\r\n                    <div className=\"portfolio__slider__vid\">\r\n                        <video muted poster=\"/img/siegel.png\" onMouseEnter={e => e.target.play()} onMouseLeave={e => e.target.pause()}>\r\n                            <source src=\"/vid/Siegel.mp4\"></source>\r\n                        </video>\r\n                    </div>\r\n                    <div className=\"portfolio__slider__vid\">\r\n                        <video muted poster=\"/img/christmas.png\" onMouseEnter={e => e.target.play()} onMouseLeave={e => e.target.pause()}>\r\n                            <source src=\"/vid/ChristmasMarket.mkv\"></source>\r\n                        </video>\r\n                    </div>\r\n\r\n                </Slider>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Portfolio","import Slider from \"react-slick\"\r\nimport React from \"react\";\r\nimport gsap from 'gsap';\r\nimport { Timeline } from 'gsap/gsap-core';\r\n\r\n\r\nclass Resume extends React.Component {\r\n\r\n    componentDidMount() {\r\n        gsap.registerPlugin();\r\n        let tl = new Timeline();\r\n        tl.set('.slick-list', {transform: 'translate(0%)'});\r\n    }\r\n\r\n    render() {\r\n\r\n        let settings = {\r\n            dots: true,\r\n            infinite: false,\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n            centerMode: true,\r\n            centerPadding: '20%',\r\n            arrows: false,\r\n        }\r\n\r\n\r\n        return (\r\n            <div className=\"resume\">\r\n\r\n                <div className=\"resume__slider\">\r\n\r\n                    <Slider {...settings}>\r\n                        <div className=\"resume__slider__entry\">\r\n                            <div className=\"resume__slider__entry__container\">\r\n                                <div className=\"resume__slider__entry__line\">\r\n                                    <div className=\"resume__slider__entry__line__location\">\r\n                                        Signals Design Group\r\n                                    </div>\r\n                                    <div>\r\n                                        Nov 2019 - Mar 2020\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"resume__slider__entry__line\">\r\n                                    <div className=\"resume__slider__entry__line__position\">\r\n                                        Web Developer\r\n                                    </div>\r\n                                    <div className=\"resume__slider__entry__line__tech\">\r\n                                        React.js, Next.js, PHP, Wordpress, GSAP, PM2\r\n                                    </div>\r\n                                </div>\r\n                                <ul className=\"resume__slider__entry__list\">\r\n                                    <li>Built 5 websites in React.js or Wordpress for clients from start to finish</li>\r\n                                    <li>Implemented web animations using GSAP, AOS, CSS and Javascript</li>\r\n                                    <li>Designed page transitions using Barba.js and next-page-transitions</li>\r\n                                    <li>Imported After Effects animations using Lottie</li>\r\n                                    <li>Performed SEO by updating metadata, headers and optimizing images</li>\r\n                                    <li>Launched live and staging websites through web hosting or PM2</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"resume__slider__entry\">\r\n                            <div className=\"resume__slider__entry__container\">\r\n                                <div className=\"resume__slider__entry__line\">\r\n                                    <div className=\"resume__slider__entry__line__location\">\r\n                                        Convertus\r\n                                    </div>\r\n                                    <div>\r\n                                        Aug 2018 - Nov 2019\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"resume__slider__entry__line\">\r\n                                    <div className=\"resume__slider__entry__line__position\">\r\n                                        Web Developer\r\n                                    </div>\r\n                                    <div className=\"resume__slider__entry__line__tech\">\r\n                                        PHP, Wordpress, Vue.js, HTML, CSS, Javascript\r\n                                    </div>\r\n                                </div>\r\n                                <ul className=\"resume__slider__entry__list\">\r\n                                    <li>Created three landing page templates in Wordpress for use in 1300+ sites</li>\r\n                                    <li>Built two landing pages for Trader to market paid search and website solutions</li>\r\n                                    <li>Completed site customizations for a $2 million per year revenue client</li>\r\n                                    <li>Optimized the speed of 9 sites belonging to Convertus' largest client, increasing PageSpeed Score by over 10x and decreasing load times by 10% </li>\r\n                                    <li>Constructed platform-wide widgets and custom post types</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"resume__slider__entry\">\r\n                            <div className=\"resume__slider__entry__container\">\r\n                                <div className=\"resume__slider__entry__line\">\r\n                                    <div className=\"resume__slider__entry__line__location\">\r\n                                        180th Pacific Coast Scout Group\r\n                                    </div>\r\n                                    <div>\r\n                                        Sep 2014 - Aug 2019\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"resume__slider__entry__line\">\r\n                                    <div className=\"resume__slider__entry__line__position\">\r\n                                        Information Technology Department Member\r\n                                    </div>\r\n                                    <div className=\"resume__slider__entry__line__tech\">\r\n                                        PHP, HTML, CSS, Javascript\r\n                                    </div>\r\n                                </div>\r\n                                <ul>\r\n                                    <li>Created a web application using Basecamp3's API and OAuth2 to allow tracking of the RSVP status of all members for events</li>\r\n                                    <li>Built a web application that tracks activity on Basecamp3 and generates a report, saving several hours per report</li>\r\n                                    <li>Optimized the group site pccrovers.com, reducing load times by over 70%</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"resume__slider__entry\">\r\n                            <div className=\"resume__slider__entry__container\">\r\n                                <div className=\"resume__slider__entry__line\">\r\n                                    <div className=\"resume__slider__entry__line__location\">\r\n                                        University of British Columbia\r\n                                    </div>\r\n                                    <div>\r\n                                        Sep 2014 - Apr 2018\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"resume__slider__entry__line\">\r\n                                    <div className=\"resume__slider__entry__line__position\">\r\n                                        Bachelor of Applied Science\r\n                                    </div>\r\n                                    <div className=\"resume__slider__entry__line__tech\">\r\n                                        Computer Engineering\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Slider>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Resume","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport { Timeline } from 'gsap/gsap-core';\r\n\r\n// Pages\r\nimport Portfolio from './Components/Portfolio'\r\nimport Resume from './Components/Resume'\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      page: 'home',\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    let tl = new Timeline();\r\n    tl.to('.menu', 1, {opacity: 1}, 1.5);\r\n  }\r\n\r\n  changePage( newpage ) {\r\n    this.setState({\r\n      page: newpage,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        { this.state.page === 'portfolio' ? <Portfolio /> : ''}\r\n        { this.state.page === 'resume' ? <Resume /> : ''}\r\n        { this.state.page === 'home' ? \r\n            <div className=\"hero\">\r\n              <h2 className=\"hero__title\">developer.</h2>\r\n            </div> : ''\r\n        }\r\n\r\n\r\n\r\n        <div className=\"menu\">\r\n          <div className={\"menu__button\" + ( this.state.page === 'home' ? ' active' : '')} onClick={() => this.changePage( 'home' )}><h3>Contact</h3></div>\r\n          <div className={\"menu__button\" + ( this.state.page === 'resume' ? ' active' : '' )} onClick={() => this.changePage( 'resume' )}><h3>Experience</h3></div>\r\n          <div className={\"menu__button\" + ( this.state.page === 'skills' ? ' active' : '' )} onClick={() => this.changePage( 'skills' )}><h3>Skills</h3></div>\r\n          <div className={\"menu__button\" + ( this.state.page === 'portfolio' ? ' active' : '' )} onClick={() => this.changePage( 'portfolio' )}><h3>Portfolio</h3></div>\r\n        </div>\r\n  \r\n\r\n      </div>\r\n  \r\n  \r\n  \r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}